imagePullSecrets: []

# Access-Control-Allow-Origin value, e.g. https://app.mydomain.com
# This is used by browsers to ensure a backend resource is not
# accessed by a malicious domain. It is a strict and important check
# that should not be skipped in production. Leaving the default
# value effectively opens an attack surface well known to hackers. 
corsHeader: "*"

redis:
  enabled: false
  username:
    value: ""
  password:
    value: ""
  host:
    value: ""
  port:
    value: ""

db:
  # Configure the database for all microservices.
  # Currently only mongo is supported but this 
  # boilerplate exists nonetheless.
  driver: "" # mongo | postgres
  postgres:
    host:
      value: ""
    port:
      value: ""
    database:
      value: ""
    username:
      value: ""
    password:
      value: ""
    sslmode:
      value: ""
    ca:
      value: ""
  mongo:
    host:
      value: ""
    dbName:
      value: ""
    authSource:
      value: ""
    username:
      value: ""
    password:
      value: ""

s3:
  endpoint: ""
  region: us-west-2
  bucket: ""
  thumbnailBucket: ""
  accessKeyId:
    value: ""
  secretAccessKey:
    value: ""

prometheus:
  enabled: false

aws:
  region: us-east-1
  accessKeyId:
    value: ""
  secretAccessKey:
    value: ""

transcriber:
  specialty: RADIOLOGY
  image: thavlik/transcriber:latest
  imagePullPolicy: Always
  logLevel: debug
  resources: {}

broadcaster:
  image: thavlik/broadcaster:latest
  imagePullPolicy: Always
  logLevel: debug
  resources: {}

strim:
  streamKey:
    value: ""
  enabled: true
  image: thavlik/strim:latest
  imagePullPolicy: Always
  logLevel: debug
  resources:
  # It is *highly* recommended that some cpu be
  # reserved for audio decoding, otherwise it
  # might not be a smooth experience. This isn't
  # extensively tested, but as little as half a
  # core appears sufficient for a single stream.
    requests:
      cpu: 500m
      memory: 256Mi

app:
  enabled: true
  image: thavlik/transcriber-app:latest
  imagePullPolicy: Always
  replicas: 1
  resources: {}

define:
  openAISecretKey: {}
  enabled: true
  image: thavlik/define:latest
  imagePullPolicy: Always
  replicas: 1
  logLevel: debug
  resources: {}


gateway:
  enabled: true
  image: thavlik/transcriber-gateway:latest
  imagePullPolicy: Always
  replicas: 1
  logLevel: debug
  resources: {}

imgsearch:
  enabled: true
  metaCollectionName: images
  historyCollectionName: history
  bing:
    location:
      value: global
    endpoint:
      value: https://api.bing.microsoft.com/
    apiKey:
      value: ""
  image: thavlik/imgsearch:latest
  imagePullPolicy: Always
  replicas: 1
  resources: {}
  logLevel: debug

iam:
  # Configure identity & access management for
  # the backend. This feature is optional, both
  # AWS Cognito and KeyCloak are supported. Not
  # specifying a driver will disable RBAC, thus
  # allowing access to the public API without
  # login.
  driver: "" # keycloak | cognito
  cognito:
    region: us-east-1
    userPoolId:
      value: ""
    clientId:
      value: ""
    clientSecret:
      value: ""
    accessKeyId:
      value: ""
    secretAccessKey:
      value: ""
  keycloak:
    # to use an external keycloak instance, set enabled=false
    # and set the endpoint to the external keycloak endpoint
    enabled: false
    endpoint: "http://{{ .Release.Name }}-keycloak:8080"
    realm: ""
    clientId:
      value: ""
    clientSecret:
      value: ""
    admin:
      realm: master
      username:
        value: null
      password:
        value: null
    image: thavlik/transcriber-keycloak:latest
    imagePullPolicy: Always
    replicas: 1
    resources: {}
