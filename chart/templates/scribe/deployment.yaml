apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-scribe
spec:
  replicas: {{ .Values.scribe.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-scribe
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-scribe
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 10 }}
    {{- end }}
      containers:
      - name: server
        imagePullPolicy: {{ .Values.scribe.imagePullPolicy }}
        image: {{ .Values.scribe.image }}
    {{- if .Values.scribe.resources }}
        resources:
{{ toYaml .Values.scribe.resources | indent 10 }}
    {{- end }}
        command:
          - scribe
          - server
          - --broadcaster-endpoint
          - "http://{{ .Release.Name }}-broadcaster:80"
          - --comprehend-endpoint
          - "http://{{ .Release.Name }}-comprehend:80"
          - --specialty
          - {{ .Values.scribe.specialty }}
        {{- if .Values.prometheus.enabled }}
          - --metrics-port
          - "2112"
        {{- end }}
        ports:
        - containerPort: 80
          name: http
      {{- if .Values.prometheus.enabled }}
        - containerPort: 2112
          protocol: TCP
          name: metrics
      {{- end }}
        env:
        - name: LOG_LEVEL
          value: {{ .Values.scribe.logLevel }}
        - name: AWS_REGION
          value: {{ .Values.aws.region }}
        - name: AWS_ACCESS_KEY_ID
{{ tpl (toYaml .Values.aws.accessKeyId) . | indent 10 }}
        - name: AWS_SECRET_ACCESS_KEY
{{ tpl (toYaml .Values.aws.secretAccessKey) . | indent 10 }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 80
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80